/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
     List<List<Integer>> result = new ArrayList<>();
     LinkedList<TreeNode> queue = new LinkedList<>();
     if( root == null){
         return result;
     }   
     queue.add(root);
     boolean forward = true;
     while(!queue.isEmpty()){
         int size = queue.size();
         List<Integer> inner = new ArrayList<>();
         for(int i = 1 ; i <= size;i++){
            TreeNode current = queue.poll();
            if(forward){
                inner.add(0,current.val);
            }
            else{
                inner.add(current.val);
            }
            if(current.right!=null){
                queue.add(current.right);
            }
            if(current.left!=null){
                queue.add(current.left);
            }
         }
         result.add(inner);
         forward = !forward;
     }
     return result;
    }
}


/* A Binary Tree node
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/
class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
      // Your code here
      ArrayList<Integer> result = new ArrayList<>();
      if(root == null){
          return result;
      }
      Queue<Node> q = new LinkedList<>();
      q.add(root);
      while(!q.isEmpty()){
          int size = q.size();
          List<Integer> inner = new ArrayList<>();
          
          for(int i = 1 ; i <= size ;i++){
              Node current = q.poll();
              if(i == 1){
                  result.add(current.data);
              }
              if(current.left!=null){
                  q.add(current.left);
              }
              if(current.right!=null){
                  q.add(current.right);
              }
          }
      }
      return result;
    }
}

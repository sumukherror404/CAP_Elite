/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean result = true;
    void traverse(TreeNode root,double min,double max){
        if(root == null){
            return;
        }
        if(!(root.val>min && root.val<max)){
            result = false;
            return;
        }
        traverse(root.left,min,root.val);
        traverse(root.right,root.val,max);
    }
    public boolean isValidBST(TreeNode root) {
        traverse(root,Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY);
        return result;
    }
}
